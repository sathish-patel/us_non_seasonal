# Generated by Django 2.2.10 on 2022-04-12 06:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Consumption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Cta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Flavour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PackSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PackType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SubBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UpcTransferenceSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delisted_upc', models.CharField(default='', max_length=200)),
                ('upc_description', models.CharField(max_length=200, null=True)),
                ('retention', models.FloatField(default=0)),
                ('to_upc', models.CharField(default='', max_length=200)),
                ('to_upc_description', models.CharField(max_length=200, null=True)),
                ('retention_percent', models.FloatField(default=0)),
                ('retention_units', models.FloatField(default=0)),
                ('retention_share', models.FloatField(default=0)),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upc_brand_id', to='planner.Brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upc_category_id', to='planner.Category')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upc_channel_id', to='planner.Channel')),
                ('consumption', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upc_consumption_id', to='planner.Consumption')),
                ('cta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upc_cta_id', to='planner.Cta')),
            ],
        ),
        migrations.CreateModel(
            name='MainRetention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upc_num', models.CharField(default='', max_length=200)),
                ('description', models.CharField(max_length=200, null=True)),
                ('pqa_segment', models.CharField(max_length=200, null=True)),
                ('portfolio_segment', models.CharField(max_length=200, null=True)),
                ('total_units', models.FloatField(default=0)),
                ('unit_share', models.FloatField(default=0)),
                ('total_sales', models.FloatField(default=0)),
                ('retention', models.FloatField(default=0)),
                ('upc_retention_units', models.FloatField(default=0)),
                ('average_acv', models.FloatField(default=0)),
                ('total_acv', models.FloatField(default=0)),
                ('velocity', models.FloatField(default=0)),
                ('acv', models.FloatField(default=0)),
                ('price_bucket', models.CharField(max_length=200, null=True)),
                ('average_share', models.FloatField(default=0)),
                ('max_share', models.FloatField(default=0)),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand_id', to='planner.Brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_id', to='planner.Category')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='channel_id', to='planner.Channel')),
                ('consumption', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consumption_id', to='planner.Consumption')),
                ('cta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cta_id', to='planner.Cta')),
                ('flavour', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flavour_id', to='planner.Flavour')),
                ('pack_size', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='packsize_id', to='planner.PackSize')),
                ('pack_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='packtype_id', to='planner.PackType')),
                ('season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='season_id', to='planner.Season')),
                ('sub_brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subbrand_id', to='planner.SubBrand')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='year_id', to='planner.Year')),
            ],
        ),
        migrations.CreateModel(
            name='MainFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mainfilter_brand_id', to='planner.Brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mainfilter_category_id', to='planner.Category')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mainfilter_channel_id', to='planner.Channel')),
                ('consumption', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mainfilter_consumption_id', to='planner.Consumption')),
                ('cta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mainfilter_cta_id', to='planner.Cta')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_desc', models.CharField(max_length=200, null=True)),
                ('upcs', models.IntegerField(default=0)),
                ('retention_rate', models.FloatField(default=0)),
                ('mars_sales_contri', models.FloatField(default=0)),
                ('non_mars_sales_contri', models.FloatField(default=0)),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attribute_id', to='planner.Attribute')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attribute_brand_id', to='planner.Brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attribute_category_id', to='planner.Category')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attribute_channel_id', to='planner.Channel')),
                ('consumption', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attribute_consumption_id', to='planner.Consumption')),
                ('cta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attribute_cta_id', to='planner.Cta')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributefilter_attribute_id', to='planner.Attribute')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributefilter_brand_id', to='planner.Brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributefilter_category_id', to='planner.Category')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributefilter_channel_id', to='planner.Channel')),
                ('consumption', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributefilter_consumption_id', to='planner.Consumption')),
                ('cta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributefilter_cta_id', to='planner.Cta')),
            ],
        ),
    ]
